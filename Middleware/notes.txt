Let's install the necessary dependencies:
sudo apt-get update && sudo apt-get install -y googletest lcov gcovr
sudo apt-get install -y libgtest-dev
sudo apt-get install -y google-mock

Now we need to build and install GTest from source since Ubuntu's package only installs the source files:
cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/*.a /usr/lib

Let's also install GMock (which comes with GTest):
cd /usr/src/googletest/googlemock && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/*.a /usr/lib

mkdir build && cd build
cmake ..
make
ctest --verbose

# From build directory
lcov --capture --directory . --output-file coverage.info
lcov --remove coverage.info '/usr/*' --output-file coverage.info
genhtml coverage.info --output-directory coverage_report

zmq
Only keeping the most recent message (HWM=1 and CONFLATE=1)
Ensuring quick socket closure (LINGER=0)
Disabling Nagle's algorithm via the IPV6 option for minimal TCP latency

---------------------------

sensor logger

The logger creates a file named sensor_updates.log if it doesn't exist
Each time the middleware starts, it adds a session marker
It logs sensor updates only when values actually change
Each log entry includes:
Timestamp with millisecond precision
Sensor name
Current value
Previous value
Whether the sensor is critical or not
The file is properly flushed after each write to ensure no data is lost
Session end markers are added when the middleware shuts down


----------------------

control logger

Creates a new log file called control_updates.log
Logs every control command with:
Timestamp with millisecond precision
Raw command message
Steering value
Throttle value
Includes session markers for start and end
Logs initialization commands
Uses thread-safe logging with mutex protection
Flushes after each write to ensure no data is lost

---------------------------------



